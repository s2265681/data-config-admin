name: Sync Multiple Files to S3 Production

on:
  push:
    branches:
      - main
    paths:
      - 'app-config/**'
      - 'config/folders.json'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-to-s3-production:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Test AWS connection
        run: |
          aws sts get-caller-identity --region ap-southeast-2
          echo "AWS connection test successful"
          
      - name: Validate configuration
        run: npm run manage-folders validate
        
      - name: Sync multiple files to S3 Production
        run: npm run sync-to-s3
        env:
          S3_BUCKET: rock-service-data
          AWS_REGION: ap-southeast-2
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
          ENVIRONMENT: production
          SYNC_SOURCE: github-main
          ANTI_CIRCULAR: true
          
      - name: Monitor sync status
        run: npm run monitor
          
      - name: Verify production sync
        run: |
          echo "验证生产环境S3同步..."
          echo "检查所有配置文件:"
          aws s3 ls s3://rock-service-data/config/production/ --recursive
          
      - name: Notify production deployment
        run: |
          echo "🚀 生产环境多文件配置已更新"
          echo "📁 S3路径: s3://rock-service-data/config/production/"
          echo "📂 源文件夹: app-config/"
          echo "🔗 Commit: ${{ github.sha }}"
          echo "👤 提交者: ${{ github.actor }}"
          echo "🔄 同步方向: GitHub → S3 (单向)"
          
      - name: Auto merge main to staging
        run: |
          echo "🔄 开始自动合并main到staging分支..."
          
          # 配置Git用户信息
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 获取staging分支
          git fetch origin staging:staging
          
          # 切换到staging分支
          git checkout staging
          
          # 合并main分支到staging
          if git merge main --no-edit; then
            echo "✅ 合并成功，推送到staging分支"
            git push origin staging
            echo "🎉 main分支已成功合并到staging分支"
          else
            echo "⚠️  合并冲突，尝试解决..."
            # 如果有冲突，使用ours策略（保留staging的更改）
            git merge --abort
            git merge main --strategy=ours --no-edit
            git push origin staging
            echo "⚠️  使用ours策略解决冲突，已推送到staging分支"
          fi
          
          echo "📋 合并详情:"
          echo "   源分支: main"
          echo "   目标分支: staging"
          echo "   提交SHA: ${{ github.sha }}"
          echo "   提交者: ${{ github.actor }}" 